services:
  postgres:
    image: postgres:16
    container_name: postgres-shop
    environment:
      POSTGRES_DB: shop
      POSTGRES_USER: postgres #app
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init/:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  neo4j:
    image: neo4j:5.20
    container_name: neo4j-db
    environment:
      - NEO4J_AUTH=neo4j/neo4jpassword
      - NEO4J_PLUGINS=[\"apoc\", \"graph-data-science\"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,gds.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*,gds.*
    ports:
      - "7474:7474"  # Browser UI
      - "7687:7687"  # Bolt protocol
    volumes:
      - ./neo4j/data:/data
      - ./neo4j/import:/var/lib/neo4j/import
      - ./neo4j/logs:/logs
      - ./neo4j/conf:/conf
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "neo4jpassword", "RETURN 1"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 40s

  app:
    build:
      context: ./app
      dockerfile: dockerfile
    container_name: fastapi-app
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/shop
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=neo4jpassword
    depends_on:
      postgres:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
